'''
Как выглядит тернарный оператор:

<значение1> if <условие> else <значение2>

- <условие> — это условие, которое проверяется.
- <значение1> — это значение, которое будет возвращено, если условие истинно.
- <значение2> — это значение, которое будет возвращено, если условие ложно.
'''

x = -1
result = "OK" if x > 0 else "НЕ ОК"
print(result) 
'''
Читается слева направо, как:
- Пишем в переменуюю ОК если x больше 0, иначе пишем НЕ ОК
'''


def check_number(num):
    return "Делится" if num % 2 == 0 else "НЕ делится"
'''
Читается слева направо, как:
- Пишем в переменуюю Делится если num делится на 2 без остатка, иначе пишем НЕ делится
'''
print(check_number(10))  
print(check_number(7))


# ---------------------------------------------------------------------
# Функции и методы, как понять, в чем разница?

my_list = [1, 2, 3, 4, 5]
print(len(my_list)) 

my_list = [1, 2, 3, 4, 5]
my_list.append(6)  
my_list.sort()
print(my_list)


'''
Функции — это "сторонние" блоки кода, которые принимают аргументы и выполняют
задачи. Их можно вызывать без привязки к какому-либо объекту. 
Примеры таких функций: len(), max(), min(), print(), и тд.

Методы — это функции, которые связаны с объектом и вызываются с 
использованием синтаксиса точки. Они принадлежат определённому типу данных и 
предоставляют специфичный функционал для этого типа.

1. Строки:
    - Метод upper(): string.upper() превращает строку в верхний регистр.
    - Функция len(): len(string) возвращает длину строки.

2. Списки:
    - Метод append(): list.append(item) добавляет элемент в конец списка.
    - Метод sort(): list.sort() сортирует список на месте.
    - Функция len(): len(list) возвращает длину списка.


Итак, как можно их различить:
- Методы обычно меняют состояние объекта. Например функция append() - добавляет 
в конец списка "что-то" - меняет объект? - да, объект изменился
- Функция sort() - сортирует список, меняет объект

'''
